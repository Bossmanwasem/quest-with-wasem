---
import BaseHead from '../components/BaseHead.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '../consts';
import { campaigns as CAMPAIGNS } from '../campaigns';
import { oneShots as ONE_SHOTS } from '../oneShots';

// Random fantasy greeting (changes each page load)
function getRandomGreeting() {
  const greetings = [
    "Greetings, traveler — the realms await!",
    "Welcome, hero. Your quest begins anew.",
    "By sword or spell, adventure calls you!",
    "Hail, wanderer! Wonders and perils lie ahead.",
    "Well met! The tavern tales are true.",
    "The fates smile — your journey starts here.",
    "Enter, if you dare, into lands of magic and myth.",
    "Step lightly—old magic stirs underfoot.",
    "A new chapter opens to brave hearts.",
  ];
  return greetings[Math.floor(Math.random() * greetings.length)];
}
const randomGreeting = getRandomGreeting();

function formatSessionDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    weekday: 'long',
    month: 'short',
    day: 'numeric',
  });
}

// Fallback: compute next weekday (weekly/biweekly) if no baseline is set
function getNextSessionFromWeekday(weekday?: number, biweekly = false) {
  if (typeof weekday !== 'number' || Number.isNaN(weekday)) return null;

  const today = new Date();
  today.setHours(0, 0, 0, 0);
  const currentDay = today.getDay();
  const interval = biweekly ? 14 : 7;
  let daysUntil = (weekday - currentDay + 7) % 7;
  if (daysUntil === 0) daysUntil = interval; // always move forward

  const next = new Date(today);
  next.setDate(today.getDate() + daysUntil);

  while (next <= today) {
    next.setDate(next.getDate() + interval);
  }

  return formatSessionDate(next);
}

// Advance from a fixed baseline date & interval (days)
function getNextFromBaseline(startDateIso?: string, intervalDays?: number) {
  if (!startDateIso || !intervalDays || intervalDays <= 0) return null;

  const parts = startDateIso.split('-').map(Number);
  if (parts.length !== 3 || parts.some(Number.isNaN)) return null;

  const [year, month, day] = parts;
  const today = new Date();
  today.setHours(0, 0, 0, 0);
  const next = new Date(year, month - 1, day);

  while (next <= today) {
    next.setDate(next.getDate() + intervalDays);
  }

  return formatSessionDate(next);
}

// Build campaign list with dynamic nextSession
const campaigns = CAMPAIGNS.map(c => {
  const nextSession =
    getNextFromBaseline(c.startDate, c.cadenceDays) ??
    getNextSessionFromWeekday(c.weekday, c.biweekly) ??
    'Date TBD';
  return { ...c, nextSession };
});

const oneShots = ONE_SHOTS;
---

<!doctype html>
<html lang="en">
  <head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <style>
      :root{
        --ink:#ffffff;
        --muted:#ffffff;
        --accent:#a7e0ff;
        --panel: rgba(0,0,0,.5);
        --edge: rgba(255,255,255,.15);
        --shadow: 0 10px 30px rgba(0,0,0,.35);
        --backdrop: blur(8px);
      }
      html,body{height:100%}
      body{
        margin:0;
        color:var(--ink);
        font:16px/1.6 ui-rounded, system-ui, -apple-system, Segoe UI, Roboto, Ubuntu, Cantarell, Noto Sans, sans-serif;
        background: #0b0f1a url('/Mountains.png') center/cover no-repeat fixed;
      }

      .wrap{ position:relative; z-index:1; display:flex; min-height:100dvh; flex-direction:column; }
      main{ flex:1 1 auto; }
      .container{ width:min(1200px,92%); margin-inline:auto; }

      .hero{ padding: clamp(56px, 8vw, 96px) 0 24px; text-align:center; }
      .title{ margin:0 0 8px; font-size: clamp(28px, 5vw, 56px); line-height:1.1; letter-spacing:.5px; color:#fff; }

      .section-head {
        display:flex;
        align-items:end;
        justify-content:space-between;
        gap:16px;
        margin:32px 0 14px;
        color:#fff;
      }
      .section-head h2 {
        margin:0;
        font-size: clamp(20px, 2.8vw, 28px);
        letter-spacing:.4px;
        color:#fff;
      }
      .section-head .hint {
        margin:0;
        font-size:14px;
        color:#fff;
      }

      .grid{ display:grid; gap:18px; grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); }
      .card-link{ text-decoration:none; color:inherit; display:block; }
      .card{
        background:var(--panel);
        border:1px solid var(--edge);
        border-radius:18px;
        box-shadow:var(--shadow);
        overflow:hidden;
        backdrop-filter:var(--backdrop);
        transition: transform .15s ease, border-color .15s ease, box-shadow .15s ease;
        color:#fff;
        display:flex;
        flex-direction:column;
        cursor:pointer;
      }
      .card:hover{
        transform:translateY(-2px);
        border-color:rgba(255,255,255,.35);
        box-shadow:0 12px 36px rgba(0,0,0,.45);
      }

      .card img{ width:100%; height:160px; object-fit:cover; display:block; }
      .card-body{ padding:18px 18px 20px; flex:1; display:flex; flex-direction:column; }
      .card h3{ margin:0 0 6px; font-size:20px; letter-spacing:.3px; color:#fff; }
      .schedule{ display:inline-flex; align-items:center; gap:8px; font-size:14px; color:#fff; }
      .dot{ width:8px; height:8px; border-radius:50%; background:var(--accent); box-shadow:0 0 12px var(--accent); }
      .next-session{ display:inline-block; margin-top:6px; padding:4px 10px; font-size:12px; background: rgba(255,255,255,.15); border-radius: 999px; }
      .blurb{ margin:12px 0 0; color:#fff; opacity:.92; }

      .oneshot-grid{ display:grid; gap:18px; grid-template-columns: repeat(auto-fit, minmax(260px, 1fr)); }
      .oneshot-card .card-body{ gap:10px; }
      .oneshot-card .schedule span:last-child{ color:rgba(255,255,255,.85); }
      .cta-link{
        margin-top:auto;
        display:inline-flex;
        align-items:center;
        gap:8px;
        padding:10px 18px;
        font-weight:600;
        font-size:14px;
        letter-spacing:.3px;
        color:#fff;
        background:rgba(167,224,255,.18);
        border-radius:999px;
        text-decoration:none;
        transition:background-color .15s ease, transform .15s ease, box-shadow .15s ease;
      }
      .cta-link:hover{
        background:rgba(167,224,255,.32);
        transform:translateY(-1px);
        box-shadow:0 8px 20px rgba(0,0,0,.35);
      }

      .spacer{ height:28px; }
      @media (max-width:380px){ .card-body{ padding:16px; } }
    </style>
  </head>
  <body>
    <div class="wrap">
      <Header />

      <main>
        <header class="hero container">
          <h1 class="title">{randomGreeting}</h1>
        </header>

        <section class="container" aria-labelledby="active-campaigns">
          <div class="section-head">
            <h2 id="active-campaigns">Active Campaigns</h2>
            <p class="hint">Schedules and quick summaries</p>
          </div>

          <div class="grid">
            {campaigns.map(c => (
              <a class="card-link" href={`/campaigns/${c.id}`} aria-label={`Open ${c.title}`}>
                <article class="card" id={c.id}>
                  <img src={c.image} alt={`${c.title} thumbnail`} />
                  <div class="card-body">
                    <h3>{c.title}</h3>
                    <div class="schedule" aria-label="schedule">
                      <span class="dot" aria-hidden="true"></span>
                      <span>{c.schedule}</span>
                    </div>
                    <div class="next-session">Next Session: {c.nextSession}</div>
                    <p class="blurb">{c.blurb}</p>
                  </div>
                </article>
              </a>
            ))}
          </div>

          <div class="spacer"></div>
        </section>

        <section class="container" aria-labelledby="one-shot-adventures">
          <div class="section-head">
            <h2 id="one-shot-adventures">One-Shot Adventures</h2>
          </div>

          <div class="grid oneshot-grid">
            {oneShots.map(shot => (
              <article class="card oneshot-card" id={shot.id}>
                <img src={shot.image} alt={`${shot.title} illustration`} />
                <div class="card-body">
                  <h3>{shot.title}</h3>
                  <div class="schedule" aria-label="recommended party level and system">
                    <span class="dot" aria-hidden="true"></span>
                    <span>{shot.level} • {shot.system}</span>
                  </div>
                  <p class="blurb">{shot.blurb}</p>
                  <a class="cta-link" href={shot.vttUrl} target="_blank" rel="noopener">
                    Launch the VTT
                    <span aria-hidden="true">↗</span>
                  </a>
                </div>
              </article>
            ))}
          </div>

          <div class="spacer"></div>
        </section>
      </main>

      <Footer />
    </div>
  </body>
</html>
