---
import BaseHead from '../../components/BaseHead.astro';
import Header from '../../components/Header.astro';
import Footer from '../../components/Footer.astro';
import { campaigns } from '../../campaigns';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  return campaigns.map((c) => ({
    params: { slug: c.id },
    props: { campaign: c },
  }));
}

const { campaign } = Astro.props;

let recaps = await getCollection('recaps', (e) => e.data.campaignId === campaign.id);
recaps = recaps.sort((a, b) => new Date(b.data.date).getTime() - new Date(a.data.date).getTime());

// Pre-render MD to components
const rendered = await Promise.all(recaps.map(async (entry) => {
  const { Content } = await entry.render();
  return { id: entry.id, data: entry.data, Content };
}));

const isAcroterra = campaign.id === 'acroterra';
const pdfSrc = '/acroterra.pdf';
---
<!-- ... keep your existing head/styles/hero/buttons ... -->

<!-- Session Recaps -->
<section class="recaps" aria-labelledby="recaps-heading">
  <h2 id="recaps-heading" class="title" style="font-size: clamp(20px,2.4vw,28px); margin-bottom: 4px;">
    Session Recaps
  </h2>

  {rendered.length === 0 ? (
    <div class="recap empty">No recaps yet. Check back after the next session!</div>
  ) : (
    rendered.map(({ id, data, Content }) => (
      <article class="recap" id={id}>
        <header class="recap-header">
          <h3 class="recap-title">{data.title}</h3>
          <p class="recap-date">
            {new Date(data.date).toLocaleDateString('en-US', { weekday:'short', year:'numeric', month:'short', day:'numeric' })}
          </p>
        </header>
        <div class="recap-body">
          <Content />
        </div>
      </article>
    ))
  )}
</section>
